<Window x:Class="CompMathKRs.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:local="clr-namespace:CompMathKRs"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="800" d:DataContext="{d:DesignInstance local:MainWindow}">
    <TabControl>
        <TabItem Header="Root">
            <Grid Name="RootGrid" MinHeight="60" >
                
                <Grid.RowDefinitions>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <!--<Canvas Name="Graphic" Grid.Row="0" Grid.Column="0"/>-->
                <lvc:CartesianChart Name="CartesianChart1"  Grid.Row="0" Grid.Column="0" 
                                    Series="{Binding SeriesCollection}" LegendLocation="Right" >
                    <!--<lvc:CartesianChart.AxisY>
                    <lvc:Axis Title="Y" Labels="{Binding _yMass}"></lvc:Axis>
                    </lvc:CartesianChart.AxisY>-->
                    <lvc:CartesianChart.AxisX>
                        <lvc:Axis Title="x" Labels="{Binding XFormatter}">
                            <lvc:Axis.Separator>
                                <lvc:Separator IsEnabled="False" Step="0.2"></lvc:Separator>
                            </lvc:Axis.Separator>
                        </lvc:Axis>
                    </lvc:CartesianChart.AxisX>
                </lvc:CartesianChart>
                
                <TabControl Grid.Row="0" Grid.Column="1">
                
                    <TabItem Header="y'">
                        
                        <DataGrid Name="Table" 
                                       DataContext="{Binding}" Loaded="Table_OnLoaded" AutoGeneratingColumn="Table_OnAutoGeneratingColumn" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="I" Binding="{Binding I}"></DataGridTextColumn>
                                <DataGridTextColumn Header="X" Binding="{Binding X}"></DataGridTextColumn>
                                <DataGridTextColumn Header="Y" Binding="{Binding Y}"></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        
                    </TabItem>
                    
                    <TabItem Header="P(x)">
                        <DataGrid Name="Table1" 
                                  DataContext="{Binding}" Loaded="Table_OnLoaded" AutoGeneratingColumn="Table_OnAutoGeneratingColumn" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="I" Binding="{Binding I}"></DataGridTextColumn>
                                <DataGridTextColumn Header="X" Binding="{Binding X}"></DataGridTextColumn>
                                <DataGridTextColumn Header="Y" Binding="{Binding Y}"></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid> 
                    </TabItem>
                    
                    <TabItem Header="P(x)=f(x)">
                        <DataGrid Name="Table2" 
                                  DataContext="{Binding}" Loaded="Table_OnLoaded" AutoGeneratingColumn="Table_OnAutoGeneratingColumn" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="I" Binding="{Binding I}"></DataGridTextColumn>
                                <DataGridTextColumn Header="X" Binding="{Binding X}"></DataGridTextColumn>
                                <DataGridTextColumn Header="Y" Binding="{Binding Y}"></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                    
                    
                </TabControl>
                
                
                <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Name="ButtonGrid">
                    
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="0.5*"/>
                        <ColumnDefinition Width="0.5*"/>
                    </Grid.ColumnDefinitions>  
                    
                    <Button Name="ButtonEuler" Content="Euler" Click="ButtonEuler_OnClick"/>
                    <Button Name="ButtonRungeKutt" Grid.Row="0" Grid.Column="1"
                            Content="Runge-Kutt" Click="ButtonRungeKutt_OnClick"/>
                    <Button Name="ButtonDifferenceTable" Grid.Row="0" Grid.Column="2"
                            Content="DifferenceTable" Click="ButtonDifferenceTable_OnClick"/>
                    
                    <TextBox Name="HBox" Grid.Row="0" Grid.Column="3" PreviewTextInput="HBox_OnPreviewTextInput" Text="0.05"></TextBox>
                    <Button Name="ButtonOk" Grid.Row="0" Grid.Column="4"
                            Content="OK" Click="ButtonOk_OnClick"/>
                    
                    <Label Name="QuadFunc" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Content="P(x) = "
                           BorderBrush="Black" BorderThickness="3" Margin="1"/>
                    <Button Name="Quads" Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="2"
                            Content="QuadsFunction" Click="Quads_OnClick"/>
                    
                    <Label Name="PxFunc" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Content="P(x) = f(x) "
                           BorderBrush="Black" BorderThickness="3" Margin="1"/>
                    <Button Name="Squares" Grid.Row="2" Grid.Column="3" Grid.ColumnSpan="2"
                            Content="P(x)-f(x) = 0" Click="Squares_OnClick"/>
                    
                    <Label Name="Xlabel" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="5" Content="x1 = "
                           BorderBrush="Black" BorderThickness="3" Margin="1"/>
                    
                    
                </Grid>
                
            </Grid>
        </TabItem>
        <TabItem Header="First" GotFocus="First_OnGotFocus" >
            <Grid Name="FirstGrid" MinHeight="60" >
                
                <Grid.RowDefinitions>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                
                <!--<lvc:CartesianChart Name="FirstCartesianChart1"  Grid.Row="0" Grid.Column="0" 
                                    Series="{Binding SeriesCollection}" LegendLocation="Right" >
                    <lvc:CartesianChart.AxisX>
                        <lvc:Axis Title="x" Labels="{Binding XFormatter}">
                            <lvc:Axis.Separator>
                                <lvc:Separator IsEnabled="False" Step="0.2"></lvc:Separator>
                            </lvc:Axis.Separator>
                        </lvc:Axis>
                    </lvc:CartesianChart.AxisX>
                </lvc:CartesianChart>-->
                
                <TabControl Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
                
                    <TabItem Header="y=f(x)">
                        <DataGrid Name="FirstTable" 
                                       DataContext="{Binding}" AutoGeneratingColumn="Table_OnAutoGeneratingColumn" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="I" Binding="{Binding I}"></DataGridTextColumn>
                                <DataGridTextColumn Header="X" Binding="{Binding X}"></DataGridTextColumn>
                                <DataGridTextColumn Header="Y" Binding="{Binding Y}"></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                    
                    <TabItem Header="P(x)">
                        <DataGrid Name="FirstTable1" 
                                  DataContext="{Binding}" AutoGeneratingColumn="Table_OnAutoGeneratingColumn" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="I" Binding="{Binding I}"></DataGridTextColumn>
                                <DataGridTextColumn Header="X" Binding="{Binding X}"></DataGridTextColumn>
                                <DataGridTextColumn Header="Y" Binding="{Binding Y}"></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid> 
                    </TabItem>
                </TabControl>
                
                
                <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Name="FirstButtonGrid">
                    
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="0.5*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="0.5*"/>
                    </Grid.ColumnDefinitions>
                    
                    <Button Name="StartButton" Grid.Row="0" Grid.Column="0"
                            Content="Make dY" Click="StartButton_OnClick"/>
                    
                    <Label Name="NewtonPolinomialLabel" Grid.Row="0" Grid.Column="1" Content=" x=1.7 y=? "
                           BorderBrush="Black" BorderThickness="3" Margin="1"/>
                    <Button Name="NewtonPolinomialButton" Grid.Row="0" Grid.Column="2"
                            Content="NewtonPolinom" Click="NewtonPolinomialButton_OnClick"/>
                    
                    <Label Name="LagangePolinomialLabel" Grid.Row="0" Grid.Column="3" Content=" x=1.7 y=? "
                           BorderBrush="Black" BorderThickness="3" Margin="1"/>
                    <Button Name="LagangePolinomialButton" Grid.Row="0" Grid.Column="4"
                            Content="LagangePolinom" Click="LagangePolinomialButton_OnClick"/>
                    
                    <Label Name="FirstQuadFunc" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Content="P(x) = "
                           BorderBrush="Black" BorderThickness="3" Margin="1"/>
                    <Button Name="FirstQuads" Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="2"
                            Content="QuadsFunction" Click="FirstQuads_OnClick"/>
                    <Label Name="FirstXQuadFunc" Grid.Row="2" Grid.Column="0" Content=" f(1.7) = ? "
                           BorderBrush="Black" BorderThickness="3" Margin="1"/>
                    
                </Grid>
                
            </Grid>
        </TabItem>
        <TabItem Header="Second" GotFocus="Second_OnGotFocus">
            <Grid Name="SecondGrid" MinHeight="60">
                
                <Grid.RowDefinitions>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <!--<Canvas Name="Graphic" Grid.Row="0" Grid.Column="0"/>-->
                <lvc:CartesianChart Name="SecondCartesianChart1"  Grid.Row="0" Grid.Column="0" 
                                    Series="{Binding SecondSeriesCollection}" LegendLocation="Right" >
                    <!--<lvc:CartesianChart.AxisY>
                    <lvc:Axis Title="Y" Labels="{Binding _yMass}"></lvc:Axis>
                    </lvc:CartesianChart.AxisY>-->
                    <lvc:CartesianChart.AxisX>
                        <lvc:Axis Title="x" Labels="{Binding}">
                            <lvc:Axis.Separator>
                                <lvc:Separator IsEnabled="False" Step="0.2"></lvc:Separator>
                            </lvc:Axis.Separator>
                        </lvc:Axis>
                    </lvc:CartesianChart.AxisX>
                </lvc:CartesianChart>
                
                <TabControl Grid.Row="0" Grid.Column="1">
                    <TabItem Header="y'">
                        
                        <DataGrid Name="SecondTable" 
                                       DataContext="{Binding}" AutoGeneratingColumn="Table_OnAutoGeneratingColumn" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="I" Binding="{Binding I}"></DataGridTextColumn>
                                <DataGridTextColumn Header="X" Binding="{Binding X}"></DataGridTextColumn>
                                <DataGridTextColumn Header="Y" Binding="{Binding Y}"></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        
                    </TabItem>
                </TabControl>
                
                
                <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Name="SecondButtonGrid">
                    
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="0.5*"/>
                        <ColumnDefinition Width="0.5*"/>
                    </Grid.ColumnDefinitions> 
                    
                    <TextBox Name="SecondHBox" Grid.Row="0" Grid.Column="3" PreviewTextInput="HBox_OnPreviewTextInput" Text="0.05"></TextBox>
                    <Button Name="SecondButtonOk" Grid.Row="0" Grid.Column="4"
                            Content="OK" Click="ButtonOk_OnClick"/>
                    
                    <Label Name="SecondXlabel" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Content="x1 = "
                           BorderBrush="Black" BorderThickness="3" Margin="1"/>
                    <Button Name="SecondBirgeVietta" Grid.Row="0" Grid.Column="2"
                            Content="BirgeVietta" Click="SecondBirgeVietta_OnClick"/>
                    
                    <Label Name="SecondX1label" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Content="x1 = "
                           BorderBrush="Black" BorderThickness="3" Margin="1"/>
                    <Button Name="SecondCombined" Grid.Row="1" Grid.Column="2"
                            Content="CombinedMethod" Click="SecondCombined_OnClick"/>
                    
                    <Label Name="SecondX2label" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Content="x1 = "
                           BorderBrush="Black" BorderThickness="3" Margin="1"/>
                    <Button Name="SecondSuccessiveApproximationMethod" Grid.Row="2" Grid.Column="2"
                            Content="SuccessiveApproximationMethod" Click="SecondSuccessiveApproximationMethod_OnClick"/>
                    
                    
                </Grid>
                
            </Grid>
        </TabItem>
    </TabControl>
</Window>
